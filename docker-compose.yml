version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - .:/app
      - ./.env:/app/.env
      - /app/__pycache__/
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    # Keep the container running for devcontainer
    command: /bin/sh -c "python backend/app.py"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend

  # Development container for the frontend
  frontend-dev:
    image: node:18.19-alpine
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000/chat
      - WDS_SOCKET_PORT=0
      - CHOKIDAR_USEPOLLING=true
    # Optimized startup command that only installs dependencies when needed
    command: >
      sh -c "
        if [ ! -d 'node_modules' ] || [ ! -f 'node_modules/.modules.installed' ]; then
          echo 'Installing dependencies...' &&
          npm install --legacy-peer-deps --no-package-lock &&
          npm install ajv@8.12.0 ajv-keywords@5.1.0 --legacy-peer-deps --no-package-lock &&
          touch node_modules/.modules.installed;
        else
          echo 'Dependencies already installed, skipping installation';
        fi &&
        echo 'Starting development server...' &&
        npm start
      "
    depends_on:
      - backend

volumes:
  frontend_node_modules:
